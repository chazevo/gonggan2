<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE mapper PUBLIC
"-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="postmapper">

	<resultMap type="post" id="postResult">
		<id property="post_id" column="post_id" />
		<result property="writer_id" column="writer_id" />
		<result property="music_num" column="music_num" />
		<result property="diary_num" column="diary_num" />
		<result property="book_num" column="book_num" />
		<result property="movie_num" column="movie_num" />
		<result property="news_num" column="news_num" />
		<result property="review_num" column="review_num" />
		<result property="place_num" column="place_num" />
		<result property="bg_image" column="bg_image" />
		<result property="free_content" column="free_content" />
		<result property="book_content" column="book_content" />
		<result property="diary_content" column="diary_content" />
		<result property="movie_content" column="movie_content" />
		<result property="music_content" column="music_content" />
		<result property="news_content" column="news_content" />
		<result property="review_content" column="review_content" />
		<result property="place_content" column="place_content" />
		<result property="category" column="category" />
		<result property="shar_yn" column="shar_yn" />
		<result property="open_yn" column="open_yn" />
		<result property="goodCnt" column="good_count" />
		<result property="photo_path" column="photo_path" />
		<result property="post_date" column="post_date" />
		<result property="music_info" column="music_info" />
		<result property="music_title" column="music_title" />
		<result property="diary_title" column="diary_title" />
		<result property="movie_title" column="movie_title" />
	</resultMap>
	
	<select id="postid" parameterType="int" resultType="int">
	select sequence_post.nextval from dual
	</select>
	
	<insert id="ponlymeinsert" parameterType="Map">
	insert into post
	values(${post_id},#{loginUser},#{category},'N','N',default,#{pimg},sysdate)
	</insert>
	<insert id="ppublicinsert" parameterType="Map">
	insert into post
	values(${post_id},#{loginUser},#{category},'Y','Y',default,#{pimg},sysdate)
	</insert>
	
	<select id="calplist" parameterType="Map" resultMap="postResult">
	select *
	from post left join movie using (post_id)
	left join free using(post_id)
	left join diary using(post_id)
	left join book using(post_id)
	left join music using(post_id)
	left join place using(post_id)
	left join news using(post_id)
	left join review using(post_id)
	where (post_date between to_date(#{year}||'-'||#{month}, 'YYYY-MM') and
	to_date(decode(#{month}, 12, #{year}+1, #{year})||'-'||
	decode(#{month}, 12, 1, #{month}+1), 'YYYY-MM')-1)
	<!-- decode(값, 조건, 참일경우, 거짓일경우) -->
	and writer_id = #{writer_id}
	order by 1 desc
	</select>

	<select id="plist" parameterType="Map" resultMap="postResult">
	select * from
				(select rownum r, subquery.*
				from (select *
						from post left join movie using (post_id)
						left join free using(post_id)
						left join diary using(post_id)
						left join book using(post_id)
						left join music using(post_id)
						left join place using(post_id)
						left join news using(post_id)
						left join review using(post_id) order by 1 desc) subquery)
				where r between #{rownum} and #{rownum2}
	</select>
	
	<select id="plikelist" parameterType="Map" resultMap="postResult">
	select * from
				(select rownum r, subquery.*
				from (select *
						from post left join movie using (post_id)
						left join free using(post_id)
						left join diary using(post_id)
						left join music using(post_id)
						left join news using(post_id)
						left join place using(post_id)
						left join review using(post_id)
						order by good_count desc) subquery)
				where r between #{rownum} and #{rownum2}
	</select>
	
	<select id="nplikelist" parameterType="Map" resultMap="postResult">
	
	select * from
				(select rownum r, subquery.*
				from (select *
						from post left join movie using (post_id)
						left join free using(post_id)
						left join diary using(post_id)
						left join book using(post_id)
						left join music using(post_id)
						left join place using(post_id)
						left join news using(post_id)
						left join review using(post_id)
						order by good_count desc) subquery
						where writer_id in (select member_id from member
						where member_id in(   SELECT sender FROM NEIGHBOR
						WHERE CHECK_YN='Y' AND RECEIVER =#{writer_id} ) or
						member_id  in(   SELECT receiver FROM NEIGHBOR
						WHERE CHECK_YN='Y' AND SENDER = #{writer_id})))
				where (r between #{rownum} and #{rownum2})
	</select>
	
	<select id="categoryplikelist" parameterType="Map" resultMap="postResult">
	select * from
				(select rownum r, subquery.*
				from (select *
						from post right join ${category} using (post_id)
						order by good_count desc) subquery)
				where (r between #{rownum} and #{rownum2})
	</select>

	<select id="pcontentSearchLikelist" parameterType="Map" resultMap="postResult">
	select * from
				(select rownum r, subquery.*
				from (select *
						from post left join movie using (post_id)
						left join free using(post_id)
						left join diary using(post_id)
						left join book using(post_id)
						left join music using(post_id)
						left join news using(post_id)
						left join review using(post_id)
						left join place using(post_id)
						where diary_content like '%'||#{keyword}||'%' OR
							diary_title like '%'||#{keyword}||'%' OR
							free_content like '%'||#{keyword}||'%' OR
							book_content like '%'||#{keyword}||'%' OR
							news_content like '%'||#{keyword}||'%' OR
							movie_content like '%'||#{keyword}||'%' OR
							movie_title like '%'||#{keyword}||'%' OR
							place_content like '%'||#{keyword}||'%' OR
							place_name like '%'||#{keyword}||'%' OR
							music_content like '%'||#{keyword}||'%' OR
							music_title like '%'||#{keyword}||'%' order by 6 desc) subquery)
				where r between #{rownum} and #{rownum2}
	</select>

	<select id="userplist" parameterType="String" resultMap="postResult">
	select *
	from post left join movie using (post_id)
	left join free using(post_id)
	left join diary using(post_id)
	left join book using(post_id)
	left join music using(post_id)
	left join news using(post_id)
	left join place using(post_id)
	left join review using(post_id)
	where writer_id = #{writer_id}
	</select>
	
	<select id="musiclist" parameterType="Map" resultMap="postResult">
	select * from
				(select rownum r, subquery.*
				from (select *
						from post right join music using(post_id)
						) subquery)
				where r between #{rownum} and #{rownum2}
	</select>
	
	<select id="movielist" parameterType="Map" resultMap="postResult">
	select * from
				(select rownum r, subquery.*
				from (select *
						from post right join movie using(post_id)
						) subquery)
				where r between #{rownum} and #{rownum2}
	</select>
	
	<select id="diarylist" parameterType="Map" resultMap="postResult">
	select * from
				(select rownum r, subquery.*
				from (select *
						from post right join diary using(post_id)
						) subquery)
				where r between #{rownum} and #{rownum2}
	</select>
	
	<select id="newslist" parameterType="Map" resultMap="postResult">
	select * from
				(select rownum r, subquery.*
				from (select *
						from post right join news using(post_id)
						) subquery)
				where r between #{rownum} and #{rownum2}
	</select>
	
	<select id="reviewlist" parameterType="Map" resultMap="postResult">
	select * from
				(select rownum r, subquery.*
				from (select *
						from post right join review using(post_id)
						) subquery)
				where r between #{rownum} and #{rownum2}
	</select>
	
	<select id="booklist" parameterType="Map" resultMap="postResult">
	select * from
				(select rownum r, subquery.*
				from (select *
						from post right join book using(post_id)
						) subquery)
				where r between #{rownum} and #{rownum2}
	</select>
	
	<select id="placelist" parameterType="Map" resultMap="postResult">
	select * from
				(select rownum r, subquery.*
				from (select *
						from post right join place using(post_id)
						) subquery)
				where r between #{rownum} and #{rownum2}
	</select>
		
	<select id="userbook" parameterType="Map" resultMap="postResult">
	select * from
				(select rownum r, subquery.*
				from (select *
						from post right join book using(post_id)
						where writer_id = #{writer_id}
						) subquery)
				where r between to_number(#{rownum}) and to_number(#{rownum2})
	</select>
	
	<select id="usermovie" parameterType="Map" resultMap="postResult">
	select * from
				(select rownum r, subquery.*
				from (select *
						from post right join movie using(post_id)
						where writer_id = #{writer_id}
						) subquery)
				where r between to_number(#{rownum}) and to_number(#{rownum2})
	</select>
	
	<select id="usermusic" parameterType="Map" resultMap="postResult">
	select * from
				(select rownum r, subquery.*
				from (select *
						from post right join music using(post_id)
						where writer_id = #{writer_id}
						) subquery)
				where r between to_number(#{rownum}) and to_number(#{rownum2})
	</select>
	
	<select id="userfree" parameterType="Map" resultMap="postResult">
	select * from
				(select rownum r, subquery.*
				from (select *
						from post right join free using(post_id)
						where writer_id = #{writer_id}
						) subquery)
				where r between to_number(#{rownum}) and to_number(#{rownum2})
	</select>
	
	<select id="userreview" parameterType="Map" resultMap="postResult">
	select * from
				(select rownum r, subquery.*
				from (select *
						from post right join review using(post_id)
						where writer_id = #{writer_id}
						) subquery)
				where r between to_number(#{rownum}) and to_number(#{rownum2})
	</select>
	
	<select id="userplace" parameterType="Map" resultMap="postResult">
	select * from
				(select rownum r, subquery.*
				from (select *
						from post right join place using(post_id)
						where writer_id = #{writer_id}
						) subquery)
				where r between to_number(#{rownum}) and to_number(#{rownum2})
	</select>
	
	<select id="usernews" parameterType="Map" resultMap="postResult">
	select * from
				(select rownum r, subquery.*
				from (select *
						from post right join news using(post_id)
						where writer_id = #{writer_id}
						) subquery)
				where r between to_number(#{rownum}) and to_number(#{rownum2})
	</select>
	
	<select id="userdiary" parameterType="Map" resultMap="postResult">
	select * from
				(select rownum r, subquery.*
				from (select *
						from post right join diary using(post_id)
						where writer_id = #{writer_id}
						) subquery)
				where r between to_number(#{rownum}) and to_number(#{rownum2})
	</select>	
	
	<select id="pcontentsearch" parameterType="Map" resultMap="postResult">
	select * from
				(select rownum r, subquery.*
				from (select * from post left join movie using (post_id)
							left join free using(post_id)
							left join diary using(post_id)
							left join music using(post_id)
							left join book using(post_id)
							left join place using(post_id)
							left join news using(post_id)
							left join review using(post_id)
							where diary_content like '%'||#{keyword}||'%' OR
							diary_title like '%'||#{keyword}||'%' OR
							free_content like '%'||#{keyword}||'%' OR
							book_content like '%'||#{keyword}||'%' OR
							news_content like '%'||#{keyword}||'%' OR
							movie_content like '%'||#{keyword}||'%' OR
							movie_title like '%'||#{keyword}||'%' OR
							place_content like '%'||#{keyword}||'%' OR
							place_name like '%'||#{keyword}||'%' OR
							music_content like '%'||#{keyword}||'%' OR
							music_title like '%'||#{keyword}||'%') subquery)
			where (r between to_number(#{rownum}) and to_number(#{rownum2}))
	<!-- OR place_content like '%'||#{keyword}||'%' -->
	
	</select>
	
	<select id="pwritersearch" parameterType="Map" resultMap="postResult">
	select * from
				(select rownum r, subquery.*
				from (select * from post join movie using (post_id)
						left join free using(post_id)
						left join diary using(post_id)
						left join book using(post_id)
						left join place using(post_id)
						left join music using(post_id)
						left join news using(post_id)
						left join review using(post_id)
						where writer_id like '%'||#{keyword}||'%') subquery)
			where (r between to_number(#{rownum}) and to_number(#{rownum2}))
	</select>
	
	<select id="pdetail" parameterType="int" resultMap="postResult">
	select *
	from post left join movie using (post_id)
	left join free using(post_id)
	left join diary using(post_id)
	left join book using(post_id)
	left join music using(post_id)
	left join news using(post_id)
	left join review using(post_id)
	left join place using(post_id)
	where post_id = #{post_id}
	</select>
	
	<select id="pcontentsearchmax" parameterType="String" resultType="int">
	select nvl(max(r), 0) from (select rownum r
									from (select * from post left join movie using (post_id)
										left join free using(post_id)
										left join diary using(post_id)
										left join music using(post_id)
										left join book using(post_id)
										left join place using(post_id)
										left join news using(post_id)
										left join review using(post_id)
										where diary_content like '%'||#{keyword}||'%' OR
										diary_title like '%'||#{keyword}||'%' OR
										free_content like '%'||#{keyword}||'%' OR
										book_content like '%'||#{keyword}||'%' OR
										news_content like '%'||#{keyword}||'%' OR
										movie_content like '%'||#{keyword}||'%' OR
										movie_title like '%'||#{keyword}||'%' OR
										place_content like '%'||#{keyword}||'%' OR
										place_name like '%'||#{keyword}||'%' OR
										music_content like '%'||#{keyword}||'%' OR
										music_title like '%'||#{keyword}||'%')
										)
	</select>
	
	<select id="pwritersearchmax" parameterType="String" resultType="int">
	select max(r) from (select rownum r
									from (select * from post join movie using (post_id)
										left join free using(post_id)
										left join diary using(post_id)
										left join music using(post_id)
										left join book using(post_id)
										left join place using(post_id)
										left join news using(post_id)
										left join review using(post_id)
										where writer_id = #{keyword})
										)
	</select>
	
	<select id="selectpostwriter" parameterType="int" resultType="String">
	select writer_id from post where post_id =#{post_id}
	</select>
	
	<select id="plist_index2" resultMap="postResult">
	SELECT * FROM ( SELECT ROWNUM AS RNUM, GOOD_COUNT, POST_ID, CATEGORY, WRITER_ID, POST_DATE
	FROM (SELECT * FROM POST ORDER BY POST_ID DESC) )
   <!-- <![CDATA[ WHERE RNUM<=8 ]]> -->
   </select>
   
   <select id="plist_myhome" parameterType="String" resultMap="postResult">
	SELECT * FROM post where writer_id = #{writer_id}
   </select>

	<select id="nplist_index2" parameterType="String" resultMap="postResult">
	SELECT * FROM POST
	where (writer_id in
		(select receiver from NEIGHBOR
		where sender = #{member_id}
		and CHECK_YN='Y'))
		or
		(writer_id in(select sender from NEIGHBOR
		where
		receiver = #{member_id} and CHECK_YN='Y'))
	ORDER BY POST_ID DESC
	</select>

	<select id="maxrnum" parameterType="Map" resultType="int">
	select count(*) from ${category}
	</select>

	<select id="likeinorder" parameterType="String" resultMap="postResult">
      select * from
                  (select rownum r, subquery.*
                  from (select *
                        from post left join movie using (post_id)
                        left join free using(post_id)
                        left join diary using(post_id)
                        left join book using(post_id)
                        left join music using(post_id)
                        left join news using(post_id)
                        left join review using(post_id)
                        left join place using(post_id)
                  where writer_id=#{writer_id}
                        order by good_count desc) subquery)
                  where r between 1 and 5
   </select>
   
   	<select id="commentinorder" parameterType="String" resultMap="postResult">	
		select * from (select *
						from post left join movie using (post_id)
						left join free using(post_id)
						left join diary using(post_id)
						left join book using(post_id)
						left join music using(post_id)
						left join news using(post_id)
						left join place using(post_id)
						left join review using(post_id)) sub
						right join (select p.post_id, nvl(cnt, 0) comment_cnt from post p
						left join (select post_id, count(*) cnt from comments
						group by post_id) c on p.post_id = c.post_id
						where p.writer_id = #{writer_id}
						order by comment_cnt desc) d on sub.post_id = d.post_id
	</select>
	
	<select id="neighborpost" parameterType="Map" resultMap="postResult">
	select * from (select rownum r, subquery.* from ( select * from post left join movie using (post_id) 
		left join diary using(post_id)
		left join free using(post_id)
		left join book using(post_id)
		left join music using(post_id)
		left join place using(post_id)
		left join news using(post_id)
		left join review using(post_id) where writer_id in (SELECT SENDER FROM NEIGHBOR
	WHERE CHECK_YN='Y' AND RECEIVER =#{loginUser}) or writer_id in ( SELECT RECEIVER FROM NEIGHBOR
	WHERE CHECK_YN='Y' AND SENDER =#{loginUser}) order by 1 desc) subquery) where r between #{rownum} and #{rownum2}
	</select>

	<delete id="postdelete" parameterType="Map">
	delete from post where post_id=#{post_id} and writer_id=#{loginUser}
	</delete>

</mapper>
